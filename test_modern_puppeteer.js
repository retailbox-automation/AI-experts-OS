#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ Puppeteer –Ω–∞ macOS M1
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É Puppeteer 24+ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
 */

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ Puppeteer –Ω–∞ macOS M1...\n');

async function testModernPuppeteer() {
  try {
    const puppeteer = require('puppeteer');
    console.log('‚úÖ Puppeteer –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    
    console.log(`üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:
- Node.js: ${process.version}
- –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: ${process.arch}
- –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${process.platform}
- –í–µ—Ä—Å–∏—è Puppeteer: ${puppeteer.version || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);

    console.log('\nüöÄ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º modern Puppeteer OOTB
    const browser = await puppeteer.launch({
      headless: true
    });
    
    console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
    const page = await browser.newPage();
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞');
    
    await page.goto('https://www.google.com');
    console.log('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ Google –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
    
    const title = await page.title();
    console.log(`‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${title}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É
    const browserProcess = browser.process();
    if (browserProcess && browserProcess.spawnfile) {
      console.log(`‚úÖ –ü—É—Ç—å –∫ Chrome: ${browserProcess.spawnfile}`);
    }
    
    await browser.close();
    console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
    
    console.log('\nüéâ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù! –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π Puppeteer —Ä–∞–±–æ—Ç–∞–µ—Ç OOTB –Ω–∞ macOS M1!');
    return true;
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê:', error.message);
    
    console.log('\nüîÑ –ü—Ä–æ–±—É–µ–º —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º Chrome...');
    
    // Fallback –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–π Chrome
    try {
      const fs = require('fs');
      const chromePaths = [
        '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome',
        '/Applications/Chromium.app/Contents/MacOS/Chromium',
        '/opt/homebrew/bin/chromium'
      ];
      
      let systemChrome = null;
      for (const chromePath of chromePaths) {
        if (fs.existsSync(chromePath)) {
          systemChrome = chromePath;
          break;
        }
      }
      
      if (!systemChrome) {
        throw new Error('–°–∏—Å—Ç–µ–º–Ω—ã–π Chrome –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      console.log(`üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π Chrome: ${systemChrome}`);
      
      const puppeteer = require('puppeteer');
      const browser = await puppeteer.launch({
        headless: true,
        executablePath: systemChrome,
        args: ['--no-sandbox', '--disable-setuid-sandbox']
      });
      
      console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º Chrome!');
      
      const page = await browser.newPage();
      await page.goto('https://www.google.com');
      const title = await page.title();
      console.log(`‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${title}`);
      
      await browser.close();
      
      console.log('\nüéâ FALLBACK –£–°–ü–ï–®–ï–ù! Puppeteer —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º Chrome!');
      return true;
      
    } catch (fallbackError) {
      console.error('‚ùå FALLBACK –û–®–ò–ë–ö–ê:', fallbackError.message);
      return false;
    }
  }
}

testModernPuppeteer().then(success => {
  console.log(`\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç: ${success ? '–£–°–ü–ï–•' : '–ù–ï–£–î–ê–ß–ê'}`);
  process.exit(success ? 0 : 1);
}).catch(error => {
  console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
}); 