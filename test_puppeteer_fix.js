#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Puppeteer –Ω–∞ macOS
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –ø—É—Ç–µ–º –∫ Chrome
 */

const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Puppeteer —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –¥–ª—è macOS...\n');

async function testPuppeteer() {
  let browser = null;
  
  try {
    console.log('1. –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ Puppeteer —Å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º Chrome...');
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è macOS
    const launchOptions = {
      headless: true,
      args: [
        '--no-sandbox',
        '--disable-setuid-sandbox',
        '--disable-dev-shm-usage',
        '--disable-accelerated-2d-canvas',
        '--no-first-run',
        '--no-zygote',
        '--disable-gpu'
      ]
    };

    // –ï—Å–ª–∏ Chrome —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –º–µ—Å—Ç–µ –Ω–∞ macOS, —É–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å
    const chromePath = '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome';
    if (fs.existsSync(chromePath)) {
      launchOptions.executablePath = chromePath;
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω Chrome –ø–æ –ø—É—Ç–∏:', chromePath);
    }
    
    browser = await puppeteer.launch(launchOptions);
    console.log('‚úÖ Puppeteer —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
    
    console.log('\n2. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    const page = await browser.newPage();
    
    console.log('3. –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ Google...');
    await page.goto('https://www.google.com', { waitUntil: 'networkidle2', timeout: 30000 });
    
    console.log('4. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞...');
    const screenshotPath = path.join(__dirname, 'test_screenshot.png');
    await page.screenshot({ 
      path: screenshotPath,
      fullPage: false,
      clip: { x: 0, y: 0, width: 1200, height: 800 }
    });
    
    console.log('‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤:', screenshotPath);
    
    console.log('5. –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    const title = await page.title();
    console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', title);
    
    await browser.close();
    console.log('\nüéâ –¢–µ—Å—Ç Puppeteer –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Puppeteer:', error.message);
    
    if (browser) {
      await browser.close();
    }
    
    console.log('\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º—ã:');
    console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Chrome —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    console.log('2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ puppeteer: npm install puppeteer');
    console.log('3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Chrome');
    
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ puppeteer
try {
  require.resolve('puppeteer');
  console.log('‚úÖ Puppeteer –Ω–∞–π–¥–µ–Ω –≤ node_modules');
} catch (error) {
  console.log('‚ùå Puppeteer –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é...');
  const { execSync } = require('child_process');
  try {
    execSync('npm install puppeteer', { stdio: 'inherit' });
    console.log('‚úÖ Puppeteer —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  } catch (installError) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Puppeteer:', installError.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testPuppeteer()
  .then(success => {
    if (success) {
      console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
      console.log('1. Puppeteer —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log('2. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å MCP —Å–µ—Ä–≤–µ—Ä');
      console.log('3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ executablePath –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ');
    }
    process.exit(success ? 0 : 1);
  })
  .catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }); 